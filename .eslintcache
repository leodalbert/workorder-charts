[{"/Users/leodalbert/React-Code/giphy/giphy/src/index.js":"1","/Users/leodalbert/React-Code/giphy/giphy/src/containers/App/App.js":"2","/Users/leodalbert/React-Code/giphy/giphy/src/store/store.js":"3","/Users/leodalbert/React-Code/giphy/giphy/src/reducers/index.js":"4","/Users/leodalbert/Code/work-order-charts/src/index.js":"5","/Users/leodalbert/Code/work-order-charts/src/store/store.js":"6","/Users/leodalbert/Code/work-order-charts/src/containers/App/App.js":"7","/Users/leodalbert/Code/work-order-charts/src/reducers/index.js":"8","/Users/leodalbert/Code/work-order-charts/src/containers/DashboardContainer/index.js":"9","/Users/leodalbert/Code/work-order-charts/src/containers/DashboardContainer/components/Dashboard.js":"10","/Users/leodalbert/Code/work-order-charts/src/actions/workorders.js":"11","/Users/leodalbert/Code/work-order-charts/src/actions/types.js":"12","/Users/leodalbert/Code/work-order-charts/src/utils/network.js":"13","/Users/leodalbert/Code/work-order-charts/src/utils/environment.js":"14","/Users/leodalbert/Code/work-order-charts/src/utils/HelperFunctions.js":"15","/Users/leodalbert/Code/work-order-charts/src/reducers/workorders.js":"16","/Users/leodalbert/Code/work-order-charts/src/selectors/workorders.js":"17","/Users/leodalbert/Code/work-order-charts/src/components/charts/GroupedBar.js":"18"},{"size":303,"mtime":1612300963819,"results":"19","hashOfConfig":"20"},{"size":98,"mtime":1612300140076,"results":"21","hashOfConfig":"20"},{"size":381,"mtime":1612299753175,"results":"22","hashOfConfig":"20"},{"size":78,"mtime":1612299828580,"results":"23","hashOfConfig":"20"},{"size":303,"mtime":1612300963819,"results":"24","hashOfConfig":"25"},{"size":381,"mtime":1612299753175,"results":"26","hashOfConfig":"25"},{"size":151,"mtime":1612809001531,"results":"27","hashOfConfig":"25"},{"size":129,"mtime":1612809510315,"results":"28","hashOfConfig":"25"},{"size":558,"mtime":1612830598548,"results":"29","hashOfConfig":"25"},{"size":580,"mtime":1612830742880,"results":"30","hashOfConfig":"25"},{"size":384,"mtime":1612830753604,"results":"31","hashOfConfig":"25"},{"size":64,"mtime":1612809737154,"results":"32","hashOfConfig":"25"},{"size":742,"mtime":1612831088867,"results":"33","hashOfConfig":"25"},{"size":65,"mtime":1612807353091,"results":"34","hashOfConfig":"25"},{"size":493,"mtime":1612912180112,"results":"35","hashOfConfig":"25"},{"size":472,"mtime":1612809485076,"results":"36","hashOfConfig":"25"},{"size":1747,"mtime":1612830995424,"results":"37","hashOfConfig":"25"},{"size":963,"mtime":1612830973069,"results":"38","hashOfConfig":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"170ej1t",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ntmpk4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},"/Users/leodalbert/React-Code/giphy/giphy/src/index.js",[],"/Users/leodalbert/React-Code/giphy/giphy/src/containers/App/App.js",[],["81","82"],"/Users/leodalbert/React-Code/giphy/giphy/src/store/store.js",[],"/Users/leodalbert/React-Code/giphy/giphy/src/reducers/index.js",[],"/Users/leodalbert/Code/work-order-charts/src/index.js",[],["83","84"],"/Users/leodalbert/Code/work-order-charts/src/store/store.js",[],"/Users/leodalbert/Code/work-order-charts/src/containers/App/App.js",[],"/Users/leodalbert/Code/work-order-charts/src/reducers/index.js",[],"/Users/leodalbert/Code/work-order-charts/src/containers/DashboardContainer/index.js",[],"/Users/leodalbert/Code/work-order-charts/src/containers/DashboardContainer/components/Dashboard.js",["85","86"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport GroupedBar from 'components/charts/GroupedBar';\n\nconst Dashboard = ({\n  getWorkordersBySite,\n  workorders,\n  assignedDepartmentData,\n}) => {\n  useEffect(() => {\n    getWorkordersBySite();\n  }, [getWorkordersBySite]);\n\n  return workorders.length > 0 ? (\n    <div>\n      <GroupedBar assignedDepartmentData={assignedDepartmentData} />\n    </div>\n  ) : (\n    <div>loading...</div>\n  );\n};\n\nDashboard.propTypes = {};\n\nexport default Dashboard;\n\n// workorders[0].created_on\n","/Users/leodalbert/Code/work-order-charts/src/actions/workorders.js",[],"/Users/leodalbert/Code/work-order-charts/src/actions/types.js",[],"/Users/leodalbert/Code/work-order-charts/src/utils/network.js",["87"],"import axios from 'axios';\nimport { BASE_URL } from './environment';\nimport { inDev } from './HelperFunctions';\n\naxios.interceptors.response.use((response) => response.data);\nif (inDev()) {\n  axios.defaults.headers.common = {\n    Authorization: 'Bearer ' + process.env.REACT_APP_BEARER_TOKEN,\n  };\n}\n\nconst network = () => {\n  // const baseUrl = BASE_URL;\n\n  // get all workorders by site\n  const getAllWorkordersBySite = (techEmail, studioId) => {\n    // const config = { headers };\n    return axios.get(\n      `https://api.onuma.com/137/items/workorder?limit=3000&fields=*&filter[building.site.site_group][eq]=1`\n    );\n  };\n  return {\n    getAllWorkordersBySite,\n  };\n};\n\nconst networkServicee = network();\nexport default networkServicee;\n","/Users/leodalbert/Code/work-order-charts/src/utils/environment.js",[],"/Users/leodalbert/Code/work-order-charts/src/utils/HelperFunctions.js",[],"/Users/leodalbert/Code/work-order-charts/src/reducers/workorders.js",[],"/Users/leodalbert/Code/work-order-charts/src/selectors/workorders.js",["88"],"import { initialState } from 'reducers/workorders';\nimport dayjs from 'dayjs';\nimport { createSelector } from 'reselect';\nimport { colorSelector } from 'utils/HelperFunctions';\n\nexport const selectState = (state) => state.workorders || initialState;\n\nexport const selectWorkorders = (state) => selectState(state).workorders;\n\n// number of workorders by assigned_department by month\nexport const makeAssignedDepartmentData = createSelector(\n  selectWorkorders,\n  (workorders) => {\n    const data = {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      datasets: [],\n    };\n    const tempData = {};\n    workorders\n      .filter((workorder) =>\n        dayjs(workorder.created_on).isAfter(dayjs().subtract(7, 'year'))\n      )\n      .map((workorder) => {\n        const month = workorder.created_on.split('-')[1] - 1;\n        if (tempData[workorder.assigned_trade]) {\n          tempData[workorder.assigned_trade][month]\n            ? (tempData[workorder.assigned_trade][month] += 1)\n            : (tempData[workorder.assigned_trade][month] = 1);\n        } else {\n          tempData[workorder.assigned_trade] = [];\n          tempData[workorder.assigned_trade][month] = 1;\n        }\n      });\n    let i = 0;\n    for (let d in tempData) {\n      data.datasets.push({\n        label: d ? d : 'not specified',\n        data: tempData[d],\n        backgroundColor: colorSelector(i),\n      });\n      i++;\n    }\n    return data;\n  }\n);\n\n// export const makeSelectWorkorderComponents = createSelector(\n//   selectComponents,\n//   (components) => {\n//     return components.workOrderComponents;\n//   }\n// );\n","/Users/leodalbert/Code/work-order-charts/src/components/charts/GroupedBar.js",["89"],"import React, { Fragment } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst data = {\n  labels: ['1', '2', '3', '4', '5', '6'],\n  datasets: [\n    {\n      label: '# of Red Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: 'rgb(255, 99, 132)',\n    },\n    {\n      label: '# of Blue Votes',\n      data: [2, 3, 20, 5, 1, 4],\n      backgroundColor: 'rgb(54, 162, 235)',\n    },\n    {\n      label: '# of Green Votes',\n      data: [3, 10, 13, 15, 22, 30],\n      backgroundColor: 'rgb(75, 192, 192)',\n    },\n  ],\n};\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst GroupedBar = ({ assignedDepartmentData }) => (\n  <Fragment>\n    <div className='header'>\n      <h1 className='title'>Grouped Bar Chart</h1>\n      <div className='links'></div>\n    </div>\n    <Bar data={assignedDepartmentData} options={options} />\n  </Fragment>\n);\n\nexport default GroupedBar;\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":17},{"ruleId":"96","severity":1,"message":"100","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":36,"column":24,"nodeType":"104","messageId":"105","endLine":36,"endColumn":26},{"ruleId":"96","severity":1,"message":"106","line":4,"column":7,"nodeType":"98","messageId":"99","endLine":4,"endColumn":11},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'dayjs' is defined but never used.","'BASE_URL' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]